class Solution {
public:
    int maxTurbulenceSize(vector<int>& arr) {
        if(arr.size()==1) return 1;
        int count=0;
        int max1=0;
        int max2=0;
        for(int i=0;i<arr.size()-1;i++)
        {
            if(i%2==0 && arr[i]<arr[i+1]) count++;
            if(i%2==0 && arr[i]>=arr[i+1])
            {
                if(max1<count+1) max1=count+1;
                count=0;
            }
            
            if(i%2==1 && arr[i]>arr[i+1]) count++;
            if(i%2==1 && arr[i]<=arr[i+1])
            {
                if(max1<count+1) max1=count+1;
                count=0;
            }   
            
        }
        if(count+1>max1)max1=count+1;
        count=0;
        for(int i=0;i<arr.size()-1;i++)
        {
            if(i%2==0 && arr[i]>arr[i+1]) count++;
            if(i%2==0 && arr[i]<=arr[i+1])
            {
                if(max2<count+1) max2=count+1;
                count=0;
            }
            
            if(i%2==1 && arr[i]<arr[i+1]) count++;
            if(i%2==1 && arr[i]>=arr[i+1])
            {
                if(max2<count+1) max2=count+1;
                count=0;
            }
                       
            
        }
        if(count+1>max2) max2=count+1;
        return max(max1,max2);
    }
};
